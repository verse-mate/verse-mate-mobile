// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetAuthUserResponse, PostAuthChangePasswordData, PostAuthChangePasswordResponse, PostAuthLogoutResponse, PostAuthLogoutAllResponse, PostAuthSendEmailVerificationResponse, PostAuthVerifyEmailData, PostAuthVerifyEmailResponse, GetAuthSessionResponse, PutAuthProfileData, PutAuthProfileResponse, PostAuthSignupData, PostAuthSignupResponse, PostAuthLoginData, PostAuthLoginResponse, PostAuthForgotPasswordData, PostAuthForgotPasswordResponse, PostAuthResetPasswordData, PostAuthResetPasswordResponse, GetAuthResetPasswordVerifyData, GetAuthResetPasswordVerifyResponse, GetUserResponse, GetUserMeResponse, PostUserUpdateData, PostUserUpdateResponse, GetBibleBooksResponse, GetBibleLanguagesResponse, GetBibleBookByBookIdByChapterNumberData, GetBibleBookByBookIdByChapterNumberResponse, GetBibleBookExplanationByBookIdByChapterNumberData, GetBibleBookExplanationByBookIdByChapterNumberResponse, GetBibleTestamentsResponse, GetBibleChapterIdByBookIdByChapterNumberData, GetBibleChapterIdByBookIdByChapterNumberResponse, PostBibleBookConversationsHistoryData, PostBibleBookConversationsHistoryResponse, PostBibleBookMessagesHistoryData, PostBibleBookMessagesHistoryResponse, PostBibleBookConversationExistsData, PostBibleBookConversationExistsResponse, PostBibleBookNewConversationData, PostBibleBookNewConversationResponse, PostBibleBookExplanationSaveRatingData, PostBibleBookExplanationSaveRatingResponse, PutBibleBookExplanationUpdateRatingData, PutBibleBookExplanationUpdateRatingResponse, PostBibleBookExplanationRatingsData, PostBibleBookExplanationRatingsResponse, PostBibleBookChapterSaveLastReadData, PostBibleBookChapterSaveLastReadResponse, PostBibleBookChapterLastReadData, PostBibleBookChapterLastReadResponse, PostBibleBookAskVerseMateSaveUserMessageData, PostBibleBookAskVerseMateSaveUserMessageResponse, PostBibleBookAskVerseMateSaveAiMessageData, PostBibleBookAskVerseMateSaveAiMessageResponse, DeleteBibleBookDeleteChatByConversationIdData, DeleteBibleBookDeleteChatByConversationIdResponse, GetBibleBookBookmarksByUserIdData, GetBibleBookBookmarksByUserIdResponse, PostBibleBookBookmarkAddData, PostBibleBookBookmarkAddResponse, DeleteBibleBookBookmarkRemoveData, DeleteBibleBookBookmarkRemoveResponse, PostBibleBookBookmarkRemoveData, PostBibleBookBookmarkRemoveResponse, GetBibleHighlightsByUserIdData, GetBibleHighlightsByUserIdResponse, GetBibleHighlightsByUserIdByBookIdByChapterNumberData, GetBibleHighlightsByUserIdByBookIdByChapterNumberResponse, PostBibleHighlightAddData, PostBibleHighlightAddResponse, PutBibleHighlightByHighlightIdData, PutBibleHighlightByHighlightIdResponse, DeleteBibleHighlightByHighlightIdData, DeleteBibleHighlightByHighlightIdResponse, PatchUserPreferencesData, PatchUserPreferencesResponse, GetAdminExplanationsLanguagesResponse, PostAdminExplanationsRefreshLanguageStatsResponse, GetAdminUsersResponse, PatchAdminUserByIdAdminStatusData, PatchAdminUserByIdAdminStatusResponse, PostAdminBatchExplanationsData, PostAdminBatchExplanationsResponse, PostAdminBatchRephraseData, PostAdminBatchRephraseResponse, PostAdminBatchTranslateData, PostAdminBatchTranslateResponse, GetAdminBatchByBatchJobIdData, GetAdminBatchByBatchJobIdResponse, DeleteAdminBatchByBatchJobIdData, DeleteAdminBatchByBatchJobIdResponse, GetAdminBatchHistoryData, GetAdminBatchHistoryResponse, GetAdminBatchChildrenByParentIdData, GetAdminBatchChildrenByParentIdResponse, PostAdminMonitorBibleBatchByParentIdData, PostAdminMonitorBibleBatchByParentIdResponse, PostAdminBatchesMonitorAllResponse, GetAdminBatchSummaryByParentIdData, GetAdminBatchSummaryByParentIdResponse, DeleteAdminExplanationByIdData, DeleteAdminExplanationByIdResponse, PostAdminExplanationRegenerateData, PostAdminExplanationRegenerateResponse, PostAdminExplanationRegenerateByRegenerationIdGenerateData, PostAdminExplanationRegenerateByRegenerationIdGenerateResponse, GetAdminExplanationRegenerateByRegenerationIdComparisonData, GetAdminExplanationRegenerateByRegenerationIdComparisonResponse, PostAdminExplanationRegenerateByRegenerationIdChooseData, PostAdminExplanationRegenerateByRegenerationIdChooseResponse, DeleteAdminExplanationsBulkData, DeleteAdminExplanationsBulkResponse, PostAdminExplanationsSetActiveAsDefaultData, PostAdminExplanationsSetActiveAsDefaultResponse, PostAdminExplanationsSetDefaultsActiveData, PostAdminExplanationsSetDefaultsActiveResponse, PostAdminExplanationsSetSpecificVersionActiveData, PostAdminExplanationsSetSpecificVersionActiveResponse, DeleteAdminExplanationsInactiveData, DeleteAdminExplanationsInactiveResponse, GetAdminExplanationByIdHistoryData, GetAdminExplanationByIdHistoryResponse, GetAdminExplanationsData, GetAdminExplanationsResponse, GetAdminStatsResponse, GetAdminPromptsSystemResponse, PostAdminPromptsSystemData, PostAdminPromptsSystemResponse, GetAdminPromptsUserResponse, PostAdminPromptsUserData, PostAdminPromptsUserResponse, GetAdminPromptsExplanationTypesResponse, PutAdminPromptsSystemByIdData, PutAdminPromptsSystemByIdResponse, DeleteAdminPromptsSystemByIdData, DeleteAdminPromptsSystemByIdResponse, PutAdminPromptsUserByIdData, PutAdminPromptsUserByIdResponse, DeleteAdminPromptsUserByIdData, DeleteAdminPromptsUserByIdResponse, PutAdminPromptsSystemByIdStatusData, PutAdminPromptsSystemByIdStatusResponse, PutAdminPromptsUserByIdStatusData, PutAdminPromptsUserByIdStatusResponse, PostAdminPromptsRestoreDefaultsResponse, PostAdminPromptsPlaygroundData, PostAdminPromptsPlaygroundResponse, GetAdminPromptsExplanationExistingData, GetAdminPromptsExplanationExistingResponse, GetAdminCommentaryGradesResponse, PostAdminCommentaryGradeData, PostAdminCommentaryGradeResponse } from './types.gen';

export class DefaultService {
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAuthUser(): CancelablePromise<GetAuthUserResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/auth/user'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthChangePassword(data: PostAuthChangePasswordData): CancelablePromise<PostAuthChangePasswordResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/change-password',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthLogout(): CancelablePromise<PostAuthLogoutResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/logout'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthLogoutAll(): CancelablePromise<PostAuthLogoutAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/logout-all'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthSendEmailVerification(): CancelablePromise<PostAuthSendEmailVerificationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/send-email-verification'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthVerifyEmail(data: PostAuthVerifyEmailData): CancelablePromise<PostAuthVerifyEmailResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/verify-email',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAuthSession(): CancelablePromise<GetAuthSessionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/auth/session'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putAuthProfile(data: PutAuthProfileData): CancelablePromise<PutAuthProfileResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/auth/profile',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthSignup(data: PostAuthSignupData): CancelablePromise<PostAuthSignupResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/signup',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthLogin(data: PostAuthLoginData): CancelablePromise<PostAuthLoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/login',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthForgotPassword(data: PostAuthForgotPasswordData): CancelablePromise<PostAuthForgotPasswordResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/forgot-password',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAuthResetPassword(data: PostAuthResetPasswordData): CancelablePromise<PostAuthResetPasswordResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/reset-password',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.token
     * @returns unknown
     * @throws ApiError
     */
    public static getAuthResetPasswordVerify(data: GetAuthResetPasswordVerifyData): CancelablePromise<GetAuthResetPasswordVerifyResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/auth/reset-password-verify',
            query: {
                token: data.token
            }
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getUser(): CancelablePromise<GetUserResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/user'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getUserMe(): CancelablePromise<GetUserMeResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/user/me'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postUserUpdate(data: PostUserUpdateData): CancelablePromise<PostUserUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/user/update',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleBooks(): CancelablePromise<GetBibleBooksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/books'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleLanguages(): CancelablePromise<GetBibleLanguagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/languages'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.bookId
     * @param data.chapterNumber
     * @param data.versionKey
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleBookByBookIdByChapterNumber(data: GetBibleBookByBookIdByChapterNumberData): CancelablePromise<GetBibleBookByBookIdByChapterNumberResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/book/{bookId}/{chapterNumber}',
            path: {
                bookId: data.bookId,
                chapterNumber: data.chapterNumber
            },
            query: {
                versionKey: data.versionKey
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.bookId
     * @param data.chapterNumber
     * @param data.versionKey
     * @param data.explanationType
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleBookExplanationByBookIdByChapterNumber(data: GetBibleBookExplanationByBookIdByChapterNumberData): CancelablePromise<GetBibleBookExplanationByBookIdByChapterNumberResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/book/explanation/{bookId}/{chapterNumber}',
            path: {
                bookId: data.bookId,
                chapterNumber: data.chapterNumber
            },
            query: {
                versionKey: data.versionKey,
                explanationType: data.explanationType
            }
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleTestaments(): CancelablePromise<GetBibleTestamentsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/testaments'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.bookId
     * @param data.chapterNumber
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleChapterIdByBookIdByChapterNumber(data: GetBibleChapterIdByBookIdByChapterNumberData): CancelablePromise<GetBibleChapterIdByBookIdByChapterNumberResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/chapter-id/{bookId}/{chapterNumber}',
            path: {
                bookId: data.bookId,
                chapterNumber: data.chapterNumber
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookConversationsHistory(data: PostBibleBookConversationsHistoryData): CancelablePromise<PostBibleBookConversationsHistoryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/conversations-history',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookMessagesHistory(data: PostBibleBookMessagesHistoryData): CancelablePromise<PostBibleBookMessagesHistoryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/messages-history',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookConversationExists(data: PostBibleBookConversationExistsData): CancelablePromise<PostBibleBookConversationExistsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/conversation-exists',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookNewConversation(data: PostBibleBookNewConversationData): CancelablePromise<PostBibleBookNewConversationResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/new-conversation',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookExplanationSaveRating(data: PostBibleBookExplanationSaveRatingData): CancelablePromise<PostBibleBookExplanationSaveRatingResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/explanation/save-rating',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putBibleBookExplanationUpdateRating(data: PutBibleBookExplanationUpdateRatingData): CancelablePromise<PutBibleBookExplanationUpdateRatingResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/bible/book/explanation/update-rating',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookExplanationRatings(data: PostBibleBookExplanationRatingsData): CancelablePromise<PostBibleBookExplanationRatingsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/explanation/ratings',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookChapterSaveLastRead(data: PostBibleBookChapterSaveLastReadData): CancelablePromise<PostBibleBookChapterSaveLastReadResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/chapter/save-last-read',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookChapterLastRead(data: PostBibleBookChapterLastReadData): CancelablePromise<PostBibleBookChapterLastReadResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/chapter/last-read',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookAskVerseMateSaveUserMessage(data: PostBibleBookAskVerseMateSaveUserMessageData): CancelablePromise<PostBibleBookAskVerseMateSaveUserMessageResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/ask-verse-mate/save-user-message',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookAskVerseMateSaveAiMessage(data: PostBibleBookAskVerseMateSaveAiMessageData): CancelablePromise<PostBibleBookAskVerseMateSaveAiMessageResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/ask-verse-mate/save-ai-message',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.conversationId
     * @returns unknown
     * @throws ApiError
     */
    public static deleteBibleBookDeleteChatByConversationId(data: DeleteBibleBookDeleteChatByConversationIdData): CancelablePromise<DeleteBibleBookDeleteChatByConversationIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/bible/book/delete-chat/{conversation_id}',
            path: {
                conversation_id: data.conversationId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.userId
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleBookBookmarksByUserId(data: GetBibleBookBookmarksByUserIdData): CancelablePromise<GetBibleBookBookmarksByUserIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/book/bookmarks/{user_id}',
            path: {
                user_id: data.userId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookBookmarkAdd(data: PostBibleBookBookmarkAddData): CancelablePromise<PostBibleBookBookmarkAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/bookmark/add',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.userId
     * @param data.bookId
     * @param data.chapterNumber
     * @returns unknown
     * @throws ApiError
     */
    public static deleteBibleBookBookmarkRemove(data: DeleteBibleBookBookmarkRemoveData): CancelablePromise<DeleteBibleBookBookmarkRemoveResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/bible/book/bookmark/remove',
            query: {
                user_id: data.userId,
                book_id: data.bookId,
                chapter_number: data.chapterNumber
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleBookBookmarkRemove(data: PostBibleBookBookmarkRemoveData): CancelablePromise<PostBibleBookBookmarkRemoveResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/book/bookmark/remove',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.userId
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleHighlightsByUserId(data: GetBibleHighlightsByUserIdData): CancelablePromise<GetBibleHighlightsByUserIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/highlights/{user_id}',
            path: {
                user_id: data.userId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.userId
     * @param data.bookId
     * @param data.chapterNumber
     * @returns unknown
     * @throws ApiError
     */
    public static getBibleHighlightsByUserIdByBookIdByChapterNumber(data: GetBibleHighlightsByUserIdByBookIdByChapterNumberData): CancelablePromise<GetBibleHighlightsByUserIdByBookIdByChapterNumberResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/bible/highlights/{user_id}/{book_id}/{chapter_number}',
            path: {
                user_id: data.userId,
                book_id: data.bookId,
                chapter_number: data.chapterNumber
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postBibleHighlightAdd(data: PostBibleHighlightAddData): CancelablePromise<PostBibleHighlightAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/bible/highlight/add',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.highlightId
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putBibleHighlightByHighlightId(data: PutBibleHighlightByHighlightIdData): CancelablePromise<PutBibleHighlightByHighlightIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/bible/highlight/{highlight_id}',
            path: {
                highlight_id: data.highlightId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.highlightId
     * @param data.userId
     * @returns unknown
     * @throws ApiError
     */
    public static deleteBibleHighlightByHighlightId(data: DeleteBibleHighlightByHighlightIdData): CancelablePromise<DeleteBibleHighlightByHighlightIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/bible/highlight/{highlight_id}',
            path: {
                highlight_id: data.highlightId
            },
            query: {
                user_id: data.userId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static patchUserPreferences(data: PatchUserPreferencesData): CancelablePromise<PatchUserPreferencesResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/user/preferences',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminExplanationsLanguages(): CancelablePromise<GetAdminExplanationsLanguagesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/explanations/languages'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationsRefreshLanguageStats(): CancelablePromise<PostAdminExplanationsRefreshLanguageStatsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanations/refresh-language-stats'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminUsers(): CancelablePromise<GetAdminUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/users'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static patchAdminUserByIdAdminStatus(data: PatchAdminUserByIdAdminStatusData): CancelablePromise<PatchAdminUserByIdAdminStatusResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/admin/user/{id}/admin-status',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminBatchExplanations(data: PostAdminBatchExplanationsData): CancelablePromise<PostAdminBatchExplanationsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/batch-explanations',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminBatchRephrase(data: PostAdminBatchRephraseData): CancelablePromise<PostAdminBatchRephraseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/batch-rephrase',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminBatchTranslate(data: PostAdminBatchTranslateData): CancelablePromise<PostAdminBatchTranslateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/batch-translate',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.batchJobId
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminBatchByBatchJobId(data: GetAdminBatchByBatchJobIdData): CancelablePromise<GetAdminBatchByBatchJobIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/batch/{batchJobId}',
            path: {
                batchJobId: data.batchJobId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.batchJobId
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminBatchByBatchJobId(data: DeleteAdminBatchByBatchJobIdData): CancelablePromise<DeleteAdminBatchByBatchJobIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/batch/{batchJobId}',
            path: {
                batchJobId: data.batchJobId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.limit
     * @param data.offset
     * @param data.adminOnly
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminBatchHistory(data: GetAdminBatchHistoryData = {}): CancelablePromise<GetAdminBatchHistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/batch-history',
            query: {
                limit: data.limit,
                offset: data.offset,
                adminOnly: data.adminOnly
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.parentId
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminBatchChildrenByParentId(data: GetAdminBatchChildrenByParentIdData): CancelablePromise<GetAdminBatchChildrenByParentIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/batch-children/{parentId}',
            path: {
                parentId: data.parentId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.parentId
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminMonitorBibleBatchByParentId(data: PostAdminMonitorBibleBatchByParentIdData): CancelablePromise<PostAdminMonitorBibleBatchByParentIdResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/monitor-bible-batch/{parentId}',
            path: {
                parentId: data.parentId
            }
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminBatchesMonitorAll(): CancelablePromise<PostAdminBatchesMonitorAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/batches/monitor-all'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.parentId
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminBatchSummaryByParentId(data: GetAdminBatchSummaryByParentIdData): CancelablePromise<GetAdminBatchSummaryByParentIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/batch-summary/{parentId}',
            path: {
                parentId: data.parentId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminExplanationById(data: DeleteAdminExplanationByIdData): CancelablePromise<DeleteAdminExplanationByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/explanation/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationRegenerate(data: PostAdminExplanationRegenerateData): CancelablePromise<PostAdminExplanationRegenerateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanation/regenerate',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.regenerationId
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationRegenerateByRegenerationIdGenerate(data: PostAdminExplanationRegenerateByRegenerationIdGenerateData): CancelablePromise<PostAdminExplanationRegenerateByRegenerationIdGenerateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanation/regenerate/{regenerationId}/generate',
            path: {
                regenerationId: data.regenerationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.regenerationId
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminExplanationRegenerateByRegenerationIdComparison(data: GetAdminExplanationRegenerateByRegenerationIdComparisonData): CancelablePromise<GetAdminExplanationRegenerateByRegenerationIdComparisonResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/explanation/regenerate/{regenerationId}/comparison',
            path: {
                regenerationId: data.regenerationId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.regenerationId
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationRegenerateByRegenerationIdChoose(data: PostAdminExplanationRegenerateByRegenerationIdChooseData): CancelablePromise<PostAdminExplanationRegenerateByRegenerationIdChooseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanation/regenerate/{regenerationId}/choose',
            path: {
                regenerationId: data.regenerationId
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminExplanationsBulk(data: DeleteAdminExplanationsBulkData): CancelablePromise<DeleteAdminExplanationsBulkResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/explanations/bulk',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationsSetActiveAsDefault(data: PostAdminExplanationsSetActiveAsDefaultData): CancelablePromise<PostAdminExplanationsSetActiveAsDefaultResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanations/set-active-as-default',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationsSetDefaultsActive(data: PostAdminExplanationsSetDefaultsActiveData): CancelablePromise<PostAdminExplanationsSetDefaultsActiveResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanations/set-defaults-active',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminExplanationsSetSpecificVersionActive(data: PostAdminExplanationsSetSpecificVersionActiveData): CancelablePromise<PostAdminExplanationsSetSpecificVersionActiveResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/explanations/set-specific-version-active',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminExplanationsInactive(data: DeleteAdminExplanationsInactiveData): CancelablePromise<DeleteAdminExplanationsInactiveResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/explanations/inactive',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminExplanationByIdHistory(data: GetAdminExplanationByIdHistoryData): CancelablePromise<GetAdminExplanationByIdHistoryResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/explanation/{id}/history',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.isBibleBatch
     * @param data.languageCode
     * @param data.bookName
     * @param data.chapter
     * @param data.limit
     * @param data.offset
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminExplanations(data: GetAdminExplanationsData): CancelablePromise<GetAdminExplanationsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/explanations',
            query: {
                isBibleBatch: data.isBibleBatch,
                languageCode: data.languageCode,
                bookName: data.bookName,
                chapter: data.chapter,
                limit: data.limit,
                offset: data.offset
            }
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminStats(): CancelablePromise<GetAdminStatsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/stats'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminPromptsSystem(): CancelablePromise<GetAdminPromptsSystemResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/prompts/system'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminPromptsSystem(data: PostAdminPromptsSystemData): CancelablePromise<PostAdminPromptsSystemResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/prompts/system',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminPromptsUser(): CancelablePromise<GetAdminPromptsUserResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/prompts/user'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminPromptsUser(data: PostAdminPromptsUserData): CancelablePromise<PostAdminPromptsUserResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/prompts/user',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminPromptsExplanationTypes(): CancelablePromise<GetAdminPromptsExplanationTypesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/prompts/explanation-types'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putAdminPromptsSystemById(data: PutAdminPromptsSystemByIdData): CancelablePromise<PutAdminPromptsSystemByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/admin/prompts/system/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminPromptsSystemById(data: DeleteAdminPromptsSystemByIdData): CancelablePromise<DeleteAdminPromptsSystemByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/prompts/system/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putAdminPromptsUserById(data: PutAdminPromptsUserByIdData): CancelablePromise<PutAdminPromptsUserByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/admin/prompts/user/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown
     * @throws ApiError
     */
    public static deleteAdminPromptsUserById(data: DeleteAdminPromptsUserByIdData): CancelablePromise<DeleteAdminPromptsUserByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admin/prompts/user/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putAdminPromptsSystemByIdStatus(data: PutAdminPromptsSystemByIdStatusData): CancelablePromise<PutAdminPromptsSystemByIdStatusResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/admin/prompts/system/{id}/status',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static putAdminPromptsUserByIdStatus(data: PutAdminPromptsUserByIdStatusData): CancelablePromise<PutAdminPromptsUserByIdStatusResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/admin/prompts/user/{id}/status',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminPromptsRestoreDefaults(): CancelablePromise<PostAdminPromptsRestoreDefaultsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/prompts/restore-defaults'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminPromptsPlayground(data: PostAdminPromptsPlaygroundData): CancelablePromise<PostAdminPromptsPlaygroundResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/prompts/playground',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.bookName
     * @param data.chapterNumber
     * @param data.bibleVersion
     * @param data.explanationType
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminPromptsExplanationExisting(data: GetAdminPromptsExplanationExistingData): CancelablePromise<GetAdminPromptsExplanationExistingResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/prompts/explanation/existing',
            query: {
                book_name: data.bookName,
                chapter_number: data.chapterNumber,
                bible_version: data.bibleVersion,
                explanation_type: data.explanationType
            }
        });
    }
    
    /**
     * @returns unknown
     * @throws ApiError
     */
    public static getAdminCommentaryGrades(): CancelablePromise<GetAdminCommentaryGradesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admin/commentary/grades'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown
     * @throws ApiError
     */
    public static postAdminCommentaryGrade(data: PostAdminCommentaryGradeData): CancelablePromise<PostAdminCommentaryGradeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admin/commentary/grade',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}