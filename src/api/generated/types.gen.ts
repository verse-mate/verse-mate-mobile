// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:4000' | 'https://api.versemate.com' | (string & {});
};

export type GetAuthUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/user';
};

export type GetAuthUserErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAuthUserError = GetAuthUserErrors[keyof GetAuthUserErrors];

export type GetAuthUserResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string | unknown;
    };
};

export type GetAuthUserResponse = GetAuthUserResponses[keyof GetAuthUserResponses];

export type PostAuthChangePasswordData = {
    body: {
        currentPassword: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/auth/change-password';
};

export type PostAuthChangePasswordErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthChangePasswordError = PostAuthChangePasswordErrors[keyof PostAuthChangePasswordErrors];

export type PostAuthChangePasswordResponses = {
    /**
     * Response for status 200
     */
    200: boolean;
};

export type PostAuthChangePasswordResponse = PostAuthChangePasswordResponses[keyof PostAuthChangePasswordResponses];

export type PostAuthLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout';
};

export type PostAuthLogoutErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthLogoutError = PostAuthLogoutErrors[keyof PostAuthLogoutErrors];

export type PostAuthLogoutResponses = {
    /**
     * Response for status 200
     */
    200: boolean;
};

export type PostAuthLogoutResponse = PostAuthLogoutResponses[keyof PostAuthLogoutResponses];

export type PostAuthLogoutAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/logout-all';
};

export type PostAuthLogoutAllErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthLogoutAllError = PostAuthLogoutAllErrors[keyof PostAuthLogoutAllErrors];

export type PostAuthLogoutAllResponses = {
    /**
     * Response for status 200
     */
    200: boolean;
};

export type PostAuthLogoutAllResponse = PostAuthLogoutAllResponses[keyof PostAuthLogoutAllResponses];

export type PostAuthSendEmailVerificationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/send-email-verification';
};

export type PostAuthSendEmailVerificationErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthSendEmailVerificationError = PostAuthSendEmailVerificationErrors[keyof PostAuthSendEmailVerificationErrors];

export type PostAuthSendEmailVerificationResponses = {
    /**
     * Response for status 204
     */
    204: unknown;
};

export type PostAuthVerifyEmailData = {
    body: {
        token: string;
    };
    path?: never;
    query?: never;
    url: '/auth/verify-email';
};

export type PostAuthVerifyEmailErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthVerifyEmailError = PostAuthVerifyEmailErrors[keyof PostAuthVerifyEmailErrors];

export type PostAuthVerifyEmailResponses = {
    /**
     * Response for status 200
     */
    200: {
        accessToken: string;
        verified: boolean;
    };
};

export type PostAuthVerifyEmailResponse = PostAuthVerifyEmailResponses[keyof PostAuthVerifyEmailResponses];

export type GetAuthSessionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/session';
};

export type GetAuthSessionErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAuthSessionError = GetAuthSessionErrors[keyof GetAuthSessionErrors];

export type GetAuthSessionResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        is_admin: boolean;
        preferred_language: string | unknown;
    };
};

export type GetAuthSessionResponse = GetAuthSessionResponses[keyof GetAuthSessionResponses];

export type PutAuthProfileData = {
    body: {
        firstName?: string;
        lastName?: string;
        email?: string;
    };
    path?: never;
    query?: never;
    url: '/auth/profile';
};

export type PutAuthProfileErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutAuthProfileError = PutAuthProfileErrors[keyof PutAuthProfileErrors];

export type PutAuthProfileResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        is_admin: boolean;
        preferred_language: string | unknown;
    };
};

export type PutAuthProfileResponse = PutAuthProfileResponses[keyof PutAuthProfileResponses];

export type PostAuthSignupData = {
    body: {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/auth/signup';
};

export type PostAuthSignupErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthSignupError = PostAuthSignupErrors[keyof PostAuthSignupErrors];

export type PostAuthSignupResponses = {
    /**
     * Response for status 200
     */
    200: {
        accessToken: string;
        verified: boolean;
    };
};

export type PostAuthSignupResponse = PostAuthSignupResponses[keyof PostAuthSignupResponses];

export type PostAuthLoginData = {
    body: {
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/auth/login';
};

export type PostAuthLoginErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthLoginError = PostAuthLoginErrors[keyof PostAuthLoginErrors];

export type PostAuthLoginResponses = {
    /**
     * Response for status 200
     */
    200: {
        accessToken: string;
        verified: boolean;
    };
};

export type PostAuthLoginResponse = PostAuthLoginResponses[keyof PostAuthLoginResponses];

export type PostAuthForgotPasswordData = {
    body: {
        email: string;
    };
    path?: never;
    query?: never;
    url: '/auth/forgot-password';
};

export type PostAuthForgotPasswordErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthForgotPasswordError = PostAuthForgotPasswordErrors[keyof PostAuthForgotPasswordErrors];

export type PostAuthForgotPasswordResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type PostAuthForgotPasswordResponse = PostAuthForgotPasswordResponses[keyof PostAuthForgotPasswordResponses];

export type PostAuthResetPasswordData = {
    body: {
        key: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/auth/reset-password';
};

export type PostAuthResetPasswordErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAuthResetPasswordError = PostAuthResetPasswordErrors[keyof PostAuthResetPasswordErrors];

export type PostAuthResetPasswordResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type PostAuthResetPasswordResponse = PostAuthResetPasswordResponses[keyof PostAuthResetPasswordResponses];

export type GetAuthResetPasswordVerifyData = {
    body?: never;
    path?: never;
    query: {
        token: string;
    };
    url: '/auth/reset-password-verify';
};

export type GetAuthResetPasswordVerifyErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAuthResetPasswordVerifyError = GetAuthResetPasswordVerifyErrors[keyof GetAuthResetPasswordVerifyErrors];

export type GetAuthResetPasswordVerifyResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type GetAuthResetPasswordVerifyResponse = GetAuthResetPasswordVerifyResponses[keyof GetAuthResetPasswordVerifyResponses];

export type GetUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user';
};

export type GetUserErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        fullName: string;
        emailVerified?: boolean;
        is_admin?: boolean;
        preferred_language?: string | unknown;
    }[];
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type GetUserMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user/me';
};

export type GetUserMeErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetUserMeError = GetUserMeErrors[keyof GetUserMeErrors];

export type GetUserMeResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        fullName: string;
        emailVerified?: boolean;
        is_admin?: boolean;
        preferred_language?: string | unknown;
    };
};

export type GetUserMeResponse = GetUserMeResponses[keyof GetUserMeResponses];

export type PostUserUpdateData = {
    body: {
        /**
         * User's first name
         */
        firstName: string;
        /**
         * User's last name
         */
        lastName: string;
    };
    path?: never;
    query?: never;
    url: '/user/update';
};

export type PostUserUpdateErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostUserUpdateError = PostUserUpdateErrors[keyof PostUserUpdateErrors];

export type PostUserUpdateResponses = {
    /**
     * Response for status 200
     */
    200: boolean;
};

export type PostUserUpdateResponse = PostUserUpdateResponses[keyof PostUserUpdateResponses];

export type GetBibleBooksData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/bible/books';
};

export type GetBibleBooksErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleBooksError = GetBibleBooksErrors[keyof GetBibleBooksErrors];

export type GetBibleBooksResponses = {
    /**
     * Response for status 200
     */
    200: {
        books: {
            bookId: number;
            name: string;
            testament: 'OT' | 'NT';
            genre: {
                g: number;
                n: string;
            };
            chapters: {
                chapterId: number;
                subtitles: {
                    subtitle: string;
                    start_verse: number;
                    end_verse: number;
                }[];
                verses: {
                    verseId: number;
                    text: string;
                }[];
            }[];
        }[];
    };
};

export type GetBibleBooksResponse = GetBibleBooksResponses[keyof GetBibleBooksResponses];

export type GetBibleLanguagesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/bible/languages';
};

export type GetBibleLanguagesErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleLanguagesError = GetBibleLanguagesErrors[keyof GetBibleLanguagesErrors];

export type GetBibleLanguagesResponses = {
    /**
     * Response for status 200
     */
    200: {
        language_code: string;
        name: string;
        native_name: string;
        explanation_count: number;
    }[];
};

export type GetBibleLanguagesResponse = GetBibleLanguagesResponses[keyof GetBibleLanguagesResponses];

export type GetBibleBookByBookIdByChapterNumberData = {
    body?: never;
    path: {
        bookId: string | string | number;
        chapterNumber: string | string | number;
    };
    query?: {
        versionKey?: string;
    };
    url: '/bible/book/{bookId}/{chapterNumber}';
};

export type GetBibleBookByBookIdByChapterNumberErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleBookByBookIdByChapterNumberError = GetBibleBookByBookIdByChapterNumberErrors[keyof GetBibleBookByBookIdByChapterNumberErrors];

export type GetBibleBookByBookIdByChapterNumberResponses = {
    /**
     * Response for status 200
     */
    200: {
        book: {
            bookId: number;
            name: string;
            testament: string;
            genre: {
                g: number;
                n: string | unknown;
            };
            chapters: {
                chapterNumber: number;
                subtitles: {
                    subtitle: string;
                    start_verse: number;
                    end_verse: number;
                }[];
                verses: {
                    verseNumber: number;
                    text: string;
                }[];
            }[];
        } | unknown;
        message?: string;
    } | {
        message: string;
    };
};

export type GetBibleBookByBookIdByChapterNumberResponse = GetBibleBookByBookIdByChapterNumberResponses[keyof GetBibleBookByBookIdByChapterNumberResponses];

export type GetBibleBookExplanationByBookIdByChapterNumberData = {
    body?: never;
    path: {
        bookId: string | string | number;
        chapterNumber: string | string | number;
    };
    query?: {
        versionKey?: string;
        explanationType?: string;
    };
    url: '/bible/book/explanation/{bookId}/{chapterNumber}';
};

export type GetBibleBookExplanationByBookIdByChapterNumberErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleBookExplanationByBookIdByChapterNumberError = GetBibleBookExplanationByBookIdByChapterNumberErrors[keyof GetBibleBookExplanationByBookIdByChapterNumberErrors];

export type GetBibleBookExplanationByBookIdByChapterNumberResponses = {
    /**
     * Response for status 200
     */
    200: {
        explanation: {
            book_id: number;
            chapter_number: number;
            type: string;
            explanation: string | unknown;
            explanation_id: number;
            language_code: string;
        } | unknown;
    };
};

export type GetBibleBookExplanationByBookIdByChapterNumberResponse = GetBibleBookExplanationByBookIdByChapterNumberResponses[keyof GetBibleBookExplanationByBookIdByChapterNumberResponses];

export type GetBibleTestamentsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/bible/testaments';
};

export type GetBibleTestamentsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleTestamentsError = GetBibleTestamentsErrors[keyof GetBibleTestamentsErrors];

export type GetBibleTestamentsResponses = {
    /**
     * Response for status 200
     */
    200: {
        testaments: {
            b: number;
            n: string;
            t: 'OT' | 'NT';
            g: number;
            c: number;
        }[];
    };
};

export type GetBibleTestamentsResponse = GetBibleTestamentsResponses[keyof GetBibleTestamentsResponses];

export type GetBibleChapterIdByBookIdByChapterNumberData = {
    body?: never;
    path: {
        bookId: string | string | number;
        chapterNumber: string | string | number;
    };
    query?: never;
    url: '/bible/chapter-id/{bookId}/{chapterNumber}';
};

export type GetBibleChapterIdByBookIdByChapterNumberErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleChapterIdByBookIdByChapterNumberError = GetBibleChapterIdByBookIdByChapterNumberErrors[keyof GetBibleChapterIdByBookIdByChapterNumberErrors];

export type GetBibleChapterIdByBookIdByChapterNumberResponses = {
    /**
     * Response for status 200
     */
    200: {
        chapter_id: number | unknown;
    };
};

export type GetBibleChapterIdByBookIdByChapterNumberResponse = GetBibleChapterIdByBookIdByChapterNumberResponses[keyof GetBibleChapterIdByBookIdByChapterNumberResponses];

export type PostBibleBookConversationsHistoryData = {
    body: {
        session: {
            id: string;
        };
    };
    path?: never;
    query?: never;
    url: '/bible/book/conversations-history';
};

export type PostBibleBookConversationsHistoryErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookConversationsHistoryError = PostBibleBookConversationsHistoryErrors[keyof PostBibleBookConversationsHistoryErrors];

export type PostBibleBookConversationsHistoryResponses = {
    /**
     * Response for status 200
     */
    200: {
        userChatHistory: {
            today: {
                conversation_id: number;
                user_id: string;
                title: string;
                status: 'active' | 'inactive' | 'archived';
                updated_at: string;
                book: {
                    book_id: number | unknown;
                    name: string | unknown;
                    testament: string | unknown;
                    genre_id: number | unknown;
                };
                chapter_number: number | unknown;
                messages: {
                    message_id: number;
                    content: string;
                    role: 'user' | 'assistant';
                }[];
            }[];
            yesterday: {
                conversation_id: number;
                user_id: string;
                title: string;
                status: 'active' | 'inactive' | 'archived';
                updated_at: string;
                book: {
                    book_id: number | unknown;
                    name: string | unknown;
                    testament: string | unknown;
                    genre_id: number | unknown;
                };
                chapter_number: number | unknown;
                messages: {
                    message_id: number;
                    content: string;
                    role: 'user' | 'assistant';
                }[];
            }[];
            lastSevenDays: {
                conversation_id: number;
                user_id: string;
                title: string;
                status: 'active' | 'inactive' | 'archived';
                updated_at: string;
                book: {
                    book_id: number | unknown;
                    name: string | unknown;
                    testament: string | unknown;
                    genre_id: number | unknown;
                };
                chapter_number: number | unknown;
                messages: {
                    message_id: number;
                    content: string;
                    role: 'user' | 'assistant';
                }[];
            }[];
            older: {
                conversation_id: number;
                user_id: string;
                title: string;
                status: 'active' | 'inactive' | 'archived';
                updated_at: string;
                book: {
                    book_id: number | unknown;
                    name: string | unknown;
                    testament: string | unknown;
                    genre_id: number | unknown;
                };
                chapter_number: number | unknown;
                messages: {
                    message_id: number;
                    content: string;
                    role: 'user' | 'assistant';
                }[];
            }[];
        };
    };
};

export type PostBibleBookConversationsHistoryResponse = PostBibleBookConversationsHistoryResponses[keyof PostBibleBookConversationsHistoryResponses];

export type PostBibleBookMessagesHistoryData = {
    body: {
        conversation_id: number;
        session: {
            id: string;
        };
    };
    path?: never;
    query?: never;
    url: '/bible/book/messages-history';
};

export type PostBibleBookMessagesHistoryErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookMessagesHistoryError = PostBibleBookMessagesHistoryErrors[keyof PostBibleBookMessagesHistoryErrors];

export type PostBibleBookMessagesHistoryResponses = {
    /**
     * Response for status 200
     */
    200: {
        messagesHistory: {
            message_id: number;
            conversation_id: number;
            role: 'user' | 'assistant';
            content: string;
            created_at: string;
        }[];
    };
};

export type PostBibleBookMessagesHistoryResponse = PostBibleBookMessagesHistoryResponses[keyof PostBibleBookMessagesHistoryResponses];

export type PostBibleBookConversationExistsData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/conversation-exists';
};

export type PostBibleBookConversationExistsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookConversationExistsError = PostBibleBookConversationExistsErrors[keyof PostBibleBookConversationExistsErrors];

export type PostBibleBookConversationExistsResponses = {
    /**
     * Response for status 200
     */
    200: {
        chatExists: boolean;
    };
};

export type PostBibleBookConversationExistsResponse = PostBibleBookConversationExistsResponses[keyof PostBibleBookConversationExistsResponses];

export type PostBibleBookNewConversationData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
    } & {
        content: string;
    };
    path?: never;
    query?: never;
    url: '/bible/book/new-conversation';
};

export type PostBibleBookNewConversationErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookNewConversationError = PostBibleBookNewConversationErrors[keyof PostBibleBookNewConversationErrors];

export type PostBibleBookNewConversationResponses = {
    /**
     * Response for status 200
     */
    200: {
        newConversation: {
            chat_id: number;
            message: string;
        };
        generatedTitle: string;
    };
};

export type PostBibleBookNewConversationResponse = PostBibleBookNewConversationResponses[keyof PostBibleBookNewConversationResponses];

export type PostBibleBookExplanationSaveRatingData = {
    body: {
        book_id: number;
        chapter_number: number;
    } & {
        user: {
            id: string;
        };
        rating: number;
    } & {
        [key: string]: unknown;
    } & {
        explanation_id: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/explanation/save-rating';
};

export type PostBibleBookExplanationSaveRatingErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookExplanationSaveRatingError = PostBibleBookExplanationSaveRatingErrors[keyof PostBibleBookExplanationSaveRatingErrors];

export type PostBibleBookExplanationSaveRatingResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            message: string;
        };
    };
};

export type PostBibleBookExplanationSaveRatingResponse = PostBibleBookExplanationSaveRatingResponses[keyof PostBibleBookExplanationSaveRatingResponses];

export type PutBibleBookExplanationUpdateRatingData = {
    body: {
        book_id: number;
        chapter_number: number;
    } & {
        user: {
            id: string;
        };
        rating: number;
    } & {
        [key: string]: unknown;
    } & {
        explanation_id: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/explanation/update-rating';
};

export type PutBibleBookExplanationUpdateRatingErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutBibleBookExplanationUpdateRatingError = PutBibleBookExplanationUpdateRatingErrors[keyof PutBibleBookExplanationUpdateRatingErrors];

export type PutBibleBookExplanationUpdateRatingResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            message: string;
        };
    };
};

export type PutBibleBookExplanationUpdateRatingResponse = PutBibleBookExplanationUpdateRatingResponses[keyof PutBibleBookExplanationUpdateRatingResponses];

export type PostBibleBookExplanationRatingsData = {
    body: {
        book_id: number;
        chapter_number: number;
    } & {
        user: {
            id: string;
        };
    } & {
        [key: string]: unknown;
    } & {
        explanation_id: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/explanation/ratings';
};

export type PostBibleBookExplanationRatingsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookExplanationRatingsError = PostBibleBookExplanationRatingsErrors[keyof PostBibleBookExplanationRatingsErrors];

export type PostBibleBookExplanationRatingsResponses = {
    /**
     * Response for status 200
     */
    200: {
        userRating: number;
        totalUsersWhoRated: number;
        averageRating: number;
    };
};

export type PostBibleBookExplanationRatingsResponse = PostBibleBookExplanationRatingsResponses[keyof PostBibleBookExplanationRatingsResponses];

export type PostBibleBookChapterSaveLastReadData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/chapter/save-last-read';
};

export type PostBibleBookChapterSaveLastReadErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookChapterSaveLastReadError = PostBibleBookChapterSaveLastReadErrors[keyof PostBibleBookChapterSaveLastReadErrors];

export type PostBibleBookChapterSaveLastReadResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            message: string;
        };
    };
};

export type PostBibleBookChapterSaveLastReadResponse = PostBibleBookChapterSaveLastReadResponses[keyof PostBibleBookChapterSaveLastReadResponses];

export type PostBibleBookChapterLastReadData = {
    body: {
        user_id: string;
    };
    path?: never;
    query?: never;
    url: '/bible/book/chapter/last-read';
};

export type PostBibleBookChapterLastReadErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookChapterLastReadError = PostBibleBookChapterLastReadErrors[keyof PostBibleBookChapterLastReadErrors];

export type PostBibleBookChapterLastReadResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            book_id: number;
            chapterNumber: number;
            bookName: string;
            testament: string;
            explanation: {
                book_id: number;
                chapter_number: number;
                explanation_id: number | unknown;
                type: string | unknown;
                explanation: string | unknown;
            }[];
        } | unknown;
    };
};

export type PostBibleBookChapterLastReadResponse = PostBibleBookChapterLastReadResponses[keyof PostBibleBookChapterLastReadResponses];

export type PostBibleBookAskVerseMateSaveUserMessageData = {
    body: {
        chat_id: number;
        content: string;
    };
    path?: never;
    query?: never;
    url: '/bible/book/ask-verse-mate/save-user-message';
};

export type PostBibleBookAskVerseMateSaveUserMessageErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookAskVerseMateSaveUserMessageError = PostBibleBookAskVerseMateSaveUserMessageErrors[keyof PostBibleBookAskVerseMateSaveUserMessageErrors];

export type PostBibleBookAskVerseMateSaveUserMessageResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            message_id: number;
            conversation_id: number;
            role: 'user' | 'assistant';
            content: string;
            created_at: string;
        };
    };
};

export type PostBibleBookAskVerseMateSaveUserMessageResponse = PostBibleBookAskVerseMateSaveUserMessageResponses[keyof PostBibleBookAskVerseMateSaveUserMessageResponses];

export type PostBibleBookAskVerseMateSaveAiMessageData = {
    body: {
        chat_id: number;
        content: string;
    } & {
        book_id: number;
        chapter_number: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/ask-verse-mate/save-ai-message';
};

export type PostBibleBookAskVerseMateSaveAiMessageErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookAskVerseMateSaveAiMessageError = PostBibleBookAskVerseMateSaveAiMessageErrors[keyof PostBibleBookAskVerseMateSaveAiMessageErrors];

export type PostBibleBookAskVerseMateSaveAiMessageResponses = {
    /**
     * Response for status 200
     */
    200: {
        result: {
            message_id: number;
            conversation_id: number;
            role: 'user' | 'assistant';
            content: string;
            created_at: string;
        };
    };
};

export type PostBibleBookAskVerseMateSaveAiMessageResponse = PostBibleBookAskVerseMateSaveAiMessageResponses[keyof PostBibleBookAskVerseMateSaveAiMessageResponses];

export type DeleteBibleBookDeleteChatByConversationIdData = {
    body?: never;
    path: {
        conversation_id: string | number;
    };
    query?: never;
    url: '/bible/book/delete-chat/{conversation_id}';
};

export type DeleteBibleBookDeleteChatByConversationIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteBibleBookDeleteChatByConversationIdError = DeleteBibleBookDeleteChatByConversationIdErrors[keyof DeleteBibleBookDeleteChatByConversationIdErrors];

export type DeleteBibleBookDeleteChatByConversationIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        disabledChat: number;
    };
};

export type DeleteBibleBookDeleteChatByConversationIdResponse = DeleteBibleBookDeleteChatByConversationIdResponses[keyof DeleteBibleBookDeleteChatByConversationIdResponses];

export type GetBibleBookBookmarksByUserIdData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/bible/book/bookmarks/{user_id}';
};

export type GetBibleBookBookmarksByUserIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleBookBookmarksByUserIdError = GetBibleBookBookmarksByUserIdErrors[keyof GetBibleBookBookmarksByUserIdErrors];

export type GetBibleBookBookmarksByUserIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        favorites: {
            favorite_id: number;
            chapter_number: number;
            book_id: number;
            book_name: string;
        }[];
    };
};

export type GetBibleBookBookmarksByUserIdResponse = GetBibleBookBookmarksByUserIdResponses[keyof GetBibleBookBookmarksByUserIdResponses];

export type GetBibleBookNotesByUserIdData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/bible/book/notes/{user_id}';
};

export type GetBibleBookNotesByUserIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleBookNotesByUserIdError = GetBibleBookNotesByUserIdErrors[keyof GetBibleBookNotesByUserIdErrors];

export type GetBibleBookNotesByUserIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        notes: {
            note_id: string;
            content: string;
            created_at: string;
            updated_at: string;
            chapter_number: number;
            book_id: number;
            book_name: string;
            verse_number: number | unknown;
        }[];
    };
};

export type GetBibleBookNotesByUserIdResponse = GetBibleBookNotesByUserIdResponses[keyof GetBibleBookNotesByUserIdResponses];

export type PostBibleBookNoteAddData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
        verse_id?: number;
        content: string;
    };
    path?: never;
    query?: never;
    url: '/bible/book/note/add';
};

export type PostBibleBookNoteAddErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookNoteAddError = PostBibleBookNoteAddErrors[keyof PostBibleBookNoteAddErrors];

export type PostBibleBookNoteAddResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
        note: {
            note_id: string;
            user_id: string;
            chapter_id: number;
            verse_id: number | unknown;
            content: string;
            created_at: string;
            updated_at: string;
        };
    };
};

export type PostBibleBookNoteAddResponse = PostBibleBookNoteAddResponses[keyof PostBibleBookNoteAddResponses];

export type PutBibleBookNoteUpdateData = {
    body: {
        note_id: string;
        content: string;
    };
    path?: never;
    query?: never;
    url: '/bible/book/note/update';
};

export type PutBibleBookNoteUpdateErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutBibleBookNoteUpdateError = PutBibleBookNoteUpdateErrors[keyof PutBibleBookNoteUpdateErrors];

export type PutBibleBookNoteUpdateResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type PutBibleBookNoteUpdateResponse = PutBibleBookNoteUpdateResponses[keyof PutBibleBookNoteUpdateResponses];

export type DeleteBibleBookNoteRemoveData = {
    body?: never;
    path?: never;
    query: {
        note_id: string;
    };
    url: '/bible/book/note/remove';
};

export type DeleteBibleBookNoteRemoveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteBibleBookNoteRemoveError = DeleteBibleBookNoteRemoveErrors[keyof DeleteBibleBookNoteRemoveErrors];

export type DeleteBibleBookNoteRemoveResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type DeleteBibleBookNoteRemoveResponse = DeleteBibleBookNoteRemoveResponses[keyof DeleteBibleBookNoteRemoveResponses];

export type PostBibleBookBookmarkAddData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/bookmark/add';
};

export type PostBibleBookBookmarkAddErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookBookmarkAddError = PostBibleBookBookmarkAddErrors[keyof PostBibleBookBookmarkAddErrors];

export type PostBibleBookBookmarkAddResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type PostBibleBookBookmarkAddResponse = PostBibleBookBookmarkAddResponses[keyof PostBibleBookBookmarkAddResponses];

export type DeleteBibleBookBookmarkRemoveData = {
    body?: never;
    path?: never;
    query: {
        user_id: string;
        book_id: string;
        chapter_number: string;
    };
    url: '/bible/book/bookmark/remove';
};

export type DeleteBibleBookBookmarkRemoveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteBibleBookBookmarkRemoveError = DeleteBibleBookBookmarkRemoveErrors[keyof DeleteBibleBookBookmarkRemoveErrors];

export type DeleteBibleBookBookmarkRemoveResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type DeleteBibleBookBookmarkRemoveResponse = DeleteBibleBookBookmarkRemoveResponses[keyof DeleteBibleBookBookmarkRemoveResponses];

export type PostBibleBookBookmarkRemoveData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
    };
    path?: never;
    query?: never;
    url: '/bible/book/bookmark/remove';
};

export type PostBibleBookBookmarkRemoveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleBookBookmarkRemoveError = PostBibleBookBookmarkRemoveErrors[keyof PostBibleBookBookmarkRemoveErrors];

export type PostBibleBookBookmarkRemoveResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type PostBibleBookBookmarkRemoveResponse = PostBibleBookBookmarkRemoveResponses[keyof PostBibleBookBookmarkRemoveResponses];

export type GetBibleHighlightsByUserIdData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/bible/highlights/{user_id}';
};

export type GetBibleHighlightsByUserIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleHighlightsByUserIdError = GetBibleHighlightsByUserIdErrors[keyof GetBibleHighlightsByUserIdErrors];

export type GetBibleHighlightsByUserIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        highlights: {
            highlight_id: number;
            user_id: string;
            chapter_id: number;
            start_verse: number;
            end_verse: number;
            color: 'yellow' | 'green' | 'blue' | 'pink' | 'purple' | 'orange';
            start_char: number | unknown;
            end_char: number | unknown;
            selected_text: string | unknown;
            created_at: string;
            updated_at: string;
        }[];
    };
};

export type GetBibleHighlightsByUserIdResponse = GetBibleHighlightsByUserIdResponses[keyof GetBibleHighlightsByUserIdResponses];

export type GetBibleHighlightsByUserIdByBookIdByChapterNumberData = {
    body?: never;
    path: {
        user_id: string;
        book_id: string | number;
        chapter_number: string | number;
    };
    query?: never;
    url: '/bible/highlights/{user_id}/{book_id}/{chapter_number}';
};

export type GetBibleHighlightsByUserIdByBookIdByChapterNumberErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetBibleHighlightsByUserIdByBookIdByChapterNumberError = GetBibleHighlightsByUserIdByBookIdByChapterNumberErrors[keyof GetBibleHighlightsByUserIdByBookIdByChapterNumberErrors];

export type GetBibleHighlightsByUserIdByBookIdByChapterNumberResponses = {
    /**
     * Response for status 200
     */
    200: {
        highlights: {
            highlight_id: number;
            user_id: string;
            chapter_id: number;
            start_verse: number;
            end_verse: number;
            color: 'yellow' | 'green' | 'blue' | 'pink' | 'purple' | 'orange';
            start_char: number | unknown;
            end_char: number | unknown;
            selected_text: string | unknown;
            created_at: string;
            updated_at: string;
        }[];
    };
};

export type GetBibleHighlightsByUserIdByBookIdByChapterNumberResponse = GetBibleHighlightsByUserIdByBookIdByChapterNumberResponses[keyof GetBibleHighlightsByUserIdByBookIdByChapterNumberResponses];

export type PostBibleHighlightAddData = {
    body: {
        user_id: string;
        book_id: number;
        chapter_number: number;
        start_verse: number;
        end_verse: number;
        color?: 'yellow' | 'green' | 'blue' | 'pink' | 'purple' | 'orange';
        start_char?: number;
        end_char?: number;
        selected_text?: string;
    };
    path?: never;
    query?: never;
    url: '/bible/highlight/add';
};

export type PostBibleHighlightAddErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostBibleHighlightAddError = PostBibleHighlightAddErrors[keyof PostBibleHighlightAddErrors];

export type PostBibleHighlightAddResponses = {
    /**
     * Response for status 200
     */
    200: {
        highlight: {
            highlight_id: number;
            user_id: string;
            chapter_id: number;
            start_verse: number;
            end_verse: number;
            color: string;
            start_char: number | unknown;
            end_char: number | unknown;
            selected_text: string | unknown;
            created_at: string;
            updated_at: string;
        };
        success: boolean;
    } | {
        success: boolean;
        error: string;
        overlaps?: unknown[];
    };
};

export type PostBibleHighlightAddResponse = PostBibleHighlightAddResponses[keyof PostBibleHighlightAddResponses];

export type DeleteBibleHighlightByHighlightIdData = {
    body?: never;
    path: {
        highlight_id: number;
    };
    query?: never;
    url: '/bible/highlight/{highlight_id}';
};

export type DeleteBibleHighlightByHighlightIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteBibleHighlightByHighlightIdError = DeleteBibleHighlightByHighlightIdErrors[keyof DeleteBibleHighlightByHighlightIdErrors];

export type DeleteBibleHighlightByHighlightIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
    };
};

export type DeleteBibleHighlightByHighlightIdResponse = DeleteBibleHighlightByHighlightIdResponses[keyof DeleteBibleHighlightByHighlightIdResponses];

export type PutBibleHighlightByHighlightIdData = {
    body: {
        user_id: string;
        color: 'yellow' | 'green' | 'blue' | 'pink' | 'purple' | 'orange';
    };
    path: {
        highlight_id: number;
    };
    query?: never;
    url: '/bible/highlight/{highlight_id}';
};

export type PutBibleHighlightByHighlightIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutBibleHighlightByHighlightIdError = PutBibleHighlightByHighlightIdErrors[keyof PutBibleHighlightByHighlightIdErrors];

export type PutBibleHighlightByHighlightIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        highlight: {
            highlight_id: number;
            user_id: string;
            chapter_id: number;
            start_verse: number;
            end_verse: number;
            color: string;
            start_char: number | unknown;
            end_char: number | unknown;
            selected_text: string | unknown;
            created_at: string;
            updated_at: string;
        } | unknown;
        success: boolean;
    };
};

export type PutBibleHighlightByHighlightIdResponse = PutBibleHighlightByHighlightIdResponses[keyof PutBibleHighlightByHighlightIdResponses];

export type GetTopicsCategoriesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/topics/categories';
};

export type GetTopicsCategoriesResponses = {
    /**
     * Response for status 200
     */
    200: {
        categories: string[];
    };
};

export type GetTopicsCategoriesResponse = GetTopicsCategoriesResponses[keyof GetTopicsCategoriesResponses];

export type GetTopicsSearchData = {
    body?: never;
    path?: never;
    query: {
        category: string;
    };
    url: '/topics/search';
};

export type GetTopicsSearchResponses = {
    /**
     * Response for status 200
     */
    200: {
        topics: {
            topic_id: string;
            name: string;
            description: string | unknown;
            sort_order: number | unknown;
        }[];
    };
};

export type GetTopicsSearchResponse = GetTopicsSearchResponses[keyof GetTopicsSearchResponses];

export type GetTopicsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/topics/{id}';
};

export type GetTopicsByIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        topic: {
            topic_id: string;
            name: string;
            description: string | unknown;
            category: string;
            sort_order: number | unknown;
            is_active: boolean | unknown;
            created_at: unknown | string | number | unknown;
            updated_at: unknown | string | number | unknown;
        } | unknown;
        references: {
            content: string;
        } | unknown;
        explanation: {
            summary: string;
            byline: string;
            detailed: string;
        };
    };
};

export type GetTopicsByIdResponse = GetTopicsByIdResponses[keyof GetTopicsByIdResponses];

export type GetTopicsByIdReferencesData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        version?: string;
    };
    url: '/topics/{id}/references';
};

export type GetTopicsByIdReferencesResponses = {
    /**
     * Response for status 200
     */
    200: {
        references: {
            content: string;
        } | unknown;
    };
};

export type GetTopicsByIdReferencesResponse = GetTopicsByIdReferencesResponses[keyof GetTopicsByIdReferencesResponses];

export type GetTopicsByIdExplanationData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        type?: 'summary' | 'byline' | 'detailed';
        lang?: string;
    };
    url: '/topics/{id}/explanation';
};

export type GetTopicsByIdExplanationResponses = {
    /**
     * Response for status 200
     */
    200: {
        explanation: {
            explanation: string;
        } | unknown;
    };
};

export type GetTopicsByIdExplanationResponse = GetTopicsByIdExplanationResponses[keyof GetTopicsByIdExplanationResponses];

export type PostTopicsParseReferencesData = {
    body: {
        content: string;
        bibleVersion: string;
    };
    path?: never;
    query?: never;
    url: '/topics/parse-references';
};

export type PostTopicsParseReferencesResponses = {
    /**
     * Response for status 200
     */
    200: {
        parsedContent: string;
    };
};

export type PostTopicsParseReferencesResponse = PostTopicsParseReferencesResponses[keyof PostTopicsParseReferencesResponses];

export type PatchUserPreferencesData = {
    body: {
        preferred_language?: string;
    };
    path?: never;
    query?: never;
    url: '/user/preferences';
};

export type PatchUserPreferencesErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PatchUserPreferencesError = PatchUserPreferencesErrors[keyof PatchUserPreferencesErrors];

export type PatchUserPreferencesResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
        message: string;
    };
};

export type PatchUserPreferencesResponse = PatchUserPreferencesResponses[keyof PatchUserPreferencesResponses];

export type GetAdminExplanationsLanguagesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/explanations/languages';
};

export type GetAdminExplanationsLanguagesErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminExplanationsLanguagesError = GetAdminExplanationsLanguagesErrors[keyof GetAdminExplanationsLanguagesErrors];

export type GetAdminExplanationsLanguagesResponses = {
    /**
     * Response for status 200
     */
    200: {
        language_code: string;
        name: string;
        native_name: string;
        explanation_count: number;
    }[];
};

export type GetAdminExplanationsLanguagesResponse = GetAdminExplanationsLanguagesResponses[keyof GetAdminExplanationsLanguagesResponses];

export type PostAdminExplanationsRefreshLanguageStatsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/explanations/refresh-language-stats';
};

export type PostAdminExplanationsRefreshLanguageStatsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationsRefreshLanguageStatsError = PostAdminExplanationsRefreshLanguageStatsErrors[keyof PostAdminExplanationsRefreshLanguageStatsErrors];

export type PostAdminExplanationsRefreshLanguageStatsResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/users';
};

export type GetAdminUsersErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminUsersError = GetAdminUsersErrors[keyof GetAdminUsersErrors];

export type GetAdminUsersResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        email: string;
        firstName: string | unknown;
        lastName: string | unknown;
        is_admin: boolean;
        createdAt: string;
    }[];
};

export type GetAdminUsersResponse = GetAdminUsersResponses[keyof GetAdminUsersResponses];

export type PatchAdminUserByIdAdminStatusData = {
    body: {
        is_admin: boolean;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/user/{id}/admin-status';
};

export type PatchAdminUserByIdAdminStatusErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PatchAdminUserByIdAdminStatusError = PatchAdminUserByIdAdminStatusErrors[keyof PatchAdminUserByIdAdminStatusErrors];

export type PatchAdminUserByIdAdminStatusResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
        message: string;
    };
};

export type PatchAdminUserByIdAdminStatusResponse = PatchAdminUserByIdAdminStatusResponses[keyof PatchAdminUserByIdAdminStatusResponses];

export type PostAdminBatchExplanationsData = {
    body: {
        type: 'book' | 'bible';
        bookId?: number;
        bookName?: string;
        bibleVersion: string;
        model: string;
        explanationTypes: string[];
        skipExisting?: boolean;
        effort?: 'low' | 'medium' | 'high';
    };
    path?: never;
    query?: never;
    url: '/admin/batch-explanations';
};

export type PostAdminBatchExplanationsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminBatchExplanationsError = PostAdminBatchExplanationsErrors[keyof PostAdminBatchExplanationsErrors];

export type PostAdminBatchExplanationsResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminBatchTopicReferencesData = {
    body: {
        model: string;
        effort?: 'low' | 'medium' | 'high';
        category?: string;
        topicId?: string;
    };
    path?: never;
    query?: never;
    url: '/admin/batch-topic-references';
};

export type PostAdminBatchTopicDiscoveryData = {
    body: {
        category?: string;
        model: string;
        effort?: 'low' | 'medium' | 'high';
    };
    path?: never;
    query?: never;
    url: '/admin/batch-topic-discovery';
};

export type PostAdminBatchRephraseData = {
    body: {
        type: 'book' | 'bible';
        bookName?: string;
        model: string;
        effort?: 'low' | 'medium' | 'high';
        bibleVersion: string;
    };
    path?: never;
    query?: never;
    url: '/admin/batch-rephrase';
};

export type PostAdminBatchRephraseErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminBatchRephraseError = PostAdminBatchRephraseErrors[keyof PostAdminBatchRephraseErrors];

export type PostAdminBatchRephraseResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminBatchTopicExplanationsData = {
    body: {
        model: string;
        languageCode: string;
        explanationTypes?: string[];
        effort?: 'low' | 'medium' | 'high';
        category?: string;
        topicId?: string;
    };
    path?: never;
    query?: never;
    url: '/admin/batch-topic-explanations';
};

export type PostAdminBatchTranslateData = {
    body: {
        type: 'book' | 'bible';
        bookName?: string;
        model: string;
        effort?: 'low' | 'medium' | 'high';
        source_language_code: string;
        target_language_code: string;
        explanationTypes: string[];
        skipExisting?: boolean;
    };
    path?: never;
    query?: never;
    url: '/admin/batch-translate';
};

export type PostAdminBatchTranslateErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminBatchTranslateError = PostAdminBatchTranslateErrors[keyof PostAdminBatchTranslateErrors];

export type PostAdminBatchTranslateResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminBatchByBatchJobIdData = {
    body?: never;
    path: {
        batchJobId: string;
    };
    query?: never;
    url: '/admin/batch/{batchJobId}';
};

export type DeleteAdminBatchByBatchJobIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminBatchByBatchJobIdError = DeleteAdminBatchByBatchJobIdErrors[keyof DeleteAdminBatchByBatchJobIdErrors];

export type DeleteAdminBatchByBatchJobIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
        message: string;
    };
};

export type DeleteAdminBatchByBatchJobIdResponse = DeleteAdminBatchByBatchJobIdResponses[keyof DeleteAdminBatchByBatchJobIdResponses];

export type GetAdminBatchByBatchJobIdData = {
    body?: never;
    path: {
        batchJobId: string;
    };
    query?: never;
    url: '/admin/batch/{batchJobId}';
};

export type GetAdminBatchByBatchJobIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminBatchByBatchJobIdError = GetAdminBatchByBatchJobIdErrors[keyof GetAdminBatchByBatchJobIdErrors];

export type GetAdminBatchByBatchJobIdResponses = {
    /**
     * Response for status 200
     */
    200: {
        id: string;
        status: string;
        progress: number;
        total: number;
        completed: number;
        failed: number;
    };
};

export type GetAdminBatchByBatchJobIdResponse = GetAdminBatchByBatchJobIdResponses[keyof GetAdminBatchByBatchJobIdResponses];

export type GetAdminBatchHistoryData = {
    body?: never;
    path?: never;
    query?: {
        limit?: string;
        offset?: string;
        adminOnly?: string;
    };
    url: '/admin/batch-history';
};

export type GetAdminBatchHistoryErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminBatchHistoryError = GetAdminBatchHistoryErrors[keyof GetAdminBatchHistoryErrors];

export type GetAdminBatchHistoryResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminBatchChildrenByParentIdData = {
    body?: never;
    path: {
        parentId: string;
    };
    query?: never;
    url: '/admin/batch-children/{parentId}';
};

export type GetAdminBatchChildrenByParentIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminBatchChildrenByParentIdError = GetAdminBatchChildrenByParentIdErrors[keyof GetAdminBatchChildrenByParentIdErrors];

export type GetAdminBatchChildrenByParentIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminMonitorBibleBatchByParentIdData = {
    body?: never;
    path: {
        parentId: string;
    };
    query?: never;
    url: '/admin/monitor-bible-batch/{parentId}';
};

export type PostAdminMonitorBibleBatchByParentIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminMonitorBibleBatchByParentIdError = PostAdminMonitorBibleBatchByParentIdErrors[keyof PostAdminMonitorBibleBatchByParentIdErrors];

export type PostAdminMonitorBibleBatchByParentIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminBatchesMonitorAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/batches/monitor-all';
};

export type PostAdminBatchesMonitorAllErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminBatchesMonitorAllError = PostAdminBatchesMonitorAllErrors[keyof PostAdminBatchesMonitorAllErrors];

export type PostAdminBatchesMonitorAllResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminBatchSummaryByParentIdData = {
    body?: never;
    path: {
        parentId: string;
    };
    query?: never;
    url: '/admin/batch-summary/{parentId}';
};

export type GetAdminBatchSummaryByParentIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminBatchSummaryByParentIdError = GetAdminBatchSummaryByParentIdErrors[keyof GetAdminBatchSummaryByParentIdErrors];

export type GetAdminBatchSummaryByParentIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminExplanationByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/explanation/{id}';
};

export type DeleteAdminExplanationByIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminExplanationByIdError = DeleteAdminExplanationByIdErrors[keyof DeleteAdminExplanationByIdErrors];

export type DeleteAdminExplanationByIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationRegenerateData = {
    body: {
        bookId: number;
        chapterNumber: number;
        explanationType: string;
        bibleVersion: string;
    };
    path?: never;
    query?: never;
    url: '/admin/explanation/regenerate';
};

export type PostAdminExplanationRegenerateErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationRegenerateError = PostAdminExplanationRegenerateErrors[keyof PostAdminExplanationRegenerateErrors];

export type PostAdminExplanationRegenerateResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationRegenerateByRegenerationIdGenerateData = {
    body: {
        bookId: number;
        chapterNumber: number;
        explanationType: string;
        bibleVersion: string;
        model: string;
    };
    path: {
        regenerationId: string;
    };
    query?: never;
    url: '/admin/explanation/regenerate/{regenerationId}/generate';
};

export type PostAdminExplanationRegenerateByRegenerationIdGenerateErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationRegenerateByRegenerationIdGenerateError = PostAdminExplanationRegenerateByRegenerationIdGenerateErrors[keyof PostAdminExplanationRegenerateByRegenerationIdGenerateErrors];

export type PostAdminExplanationRegenerateByRegenerationIdGenerateResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminExplanationRegenerateByRegenerationIdComparisonData = {
    body?: never;
    path: {
        regenerationId: string;
    };
    query?: never;
    url: '/admin/explanation/regenerate/{regenerationId}/comparison';
};

export type GetAdminExplanationRegenerateByRegenerationIdComparisonErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminExplanationRegenerateByRegenerationIdComparisonError = GetAdminExplanationRegenerateByRegenerationIdComparisonErrors[keyof GetAdminExplanationRegenerateByRegenerationIdComparisonErrors];

export type GetAdminExplanationRegenerateByRegenerationIdComparisonResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationRegenerateByRegenerationIdChooseData = {
    body: {
        chosenExplanationId: number;
    };
    path: {
        regenerationId: string;
    };
    query?: never;
    url: '/admin/explanation/regenerate/{regenerationId}/choose';
};

export type PostAdminExplanationRegenerateByRegenerationIdChooseErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationRegenerateByRegenerationIdChooseError = PostAdminExplanationRegenerateByRegenerationIdChooseErrors[keyof PostAdminExplanationRegenerateByRegenerationIdChooseErrors];

export type PostAdminExplanationRegenerateByRegenerationIdChooseResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminExplanationsBulkData = {
    body: {
        bookId?: number;
        explanationType?: string;
        bibleVersion?: string;
        dateRange?: {
            from: string;
            to: string;
        };
    };
    path?: never;
    query?: never;
    url: '/admin/explanations/bulk';
};

export type DeleteAdminExplanationsBulkErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminExplanationsBulkError = DeleteAdminExplanationsBulkErrors[keyof DeleteAdminExplanationsBulkErrors];

export type DeleteAdminExplanationsBulkResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationsSetActiveAsDefaultData = {
    body: {
        isBibleBatch: boolean;
        languageCode: string;
        bookName?: string;
        chapter?: number | string;
    };
    path?: never;
    query?: never;
    url: '/admin/explanations/set-active-as-default';
};

export type PostAdminExplanationsSetActiveAsDefaultErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationsSetActiveAsDefaultError = PostAdminExplanationsSetActiveAsDefaultErrors[keyof PostAdminExplanationsSetActiveAsDefaultErrors];

export type PostAdminExplanationsSetActiveAsDefaultResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationsSetDefaultsActiveData = {
    body: {
        isBibleBatch: boolean;
        languageCode: string;
        bookName?: string;
        chapter?: number | string;
    };
    path?: never;
    query?: never;
    url: '/admin/explanations/set-defaults-active';
};

export type PostAdminExplanationsSetDefaultsActiveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationsSetDefaultsActiveError = PostAdminExplanationsSetDefaultsActiveErrors[keyof PostAdminExplanationsSetDefaultsActiveErrors];

export type PostAdminExplanationsSetDefaultsActiveResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminExplanationsSetSpecificVersionActiveData = {
    body: {
        isBibleBatch: boolean;
        languageCode: string;
        bookName?: string;
        chapter?: number | string;
        version: number;
    };
    path?: never;
    query?: never;
    url: '/admin/explanations/set-specific-version-active';
};

export type PostAdminExplanationsSetSpecificVersionActiveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminExplanationsSetSpecificVersionActiveError = PostAdminExplanationsSetSpecificVersionActiveErrors[keyof PostAdminExplanationsSetSpecificVersionActiveErrors];

export type PostAdminExplanationsSetSpecificVersionActiveResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminExplanationsInactiveData = {
    body: {
        isBibleBatch: boolean;
        languageCode: string;
        bookName?: string;
        chapter?: number | string;
    };
    path?: never;
    query?: never;
    url: '/admin/explanations/inactive';
};

export type DeleteAdminExplanationsInactiveErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminExplanationsInactiveError = DeleteAdminExplanationsInactiveErrors[keyof DeleteAdminExplanationsInactiveErrors];

export type DeleteAdminExplanationsInactiveResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminExplanationByIdHistoryData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/explanation/{id}/history';
};

export type GetAdminExplanationByIdHistoryErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminExplanationByIdHistoryError = GetAdminExplanationByIdHistoryErrors[keyof GetAdminExplanationByIdHistoryErrors];

export type GetAdminExplanationByIdHistoryResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminExplanationsData = {
    body?: never;
    path?: never;
    query: {
        isBibleBatch: string;
        languageCode: string;
        bookName?: string;
        chapter?: string;
        limit?: string;
        offset?: string;
    };
    url: '/admin/explanations';
};

export type GetAdminExplanationsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminExplanationsError = GetAdminExplanationsErrors[keyof GetAdminExplanationsErrors];

export type GetAdminExplanationsResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminStatsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/stats';
};

export type GetAdminStatsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminStatsError = GetAdminStatsErrors[keyof GetAdminStatsErrors];

export type GetAdminStatsResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminPromptsSystemData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/prompts/system';
};

export type GetAdminPromptsSystemErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminPromptsSystemError = GetAdminPromptsSystemErrors[keyof GetAdminPromptsSystemErrors];

export type GetAdminPromptsSystemResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminPromptsSystemData = {
    body: {
        prompt: string;
    };
    path?: never;
    query?: never;
    url: '/admin/prompts/system';
};

export type PostAdminPromptsSystemErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminPromptsSystemError = PostAdminPromptsSystemErrors[keyof PostAdminPromptsSystemErrors];

export type PostAdminPromptsSystemResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminPromptsUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/prompts/user';
};

export type GetAdminPromptsUserErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminPromptsUserError = GetAdminPromptsUserErrors[keyof GetAdminPromptsUserErrors];

export type GetAdminPromptsUserResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminPromptsUserData = {
    body: {
        template_name: string;
        explanation_type: 'summary' | 'byline' | 'detailed';
        prompt_template: string;
    };
    path?: never;
    query?: never;
    url: '/admin/prompts/user';
};

export type PostAdminPromptsUserErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminPromptsUserError = PostAdminPromptsUserErrors[keyof PostAdminPromptsUserErrors];

export type PostAdminPromptsUserResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminPromptsExplanationTypesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/prompts/explanation-types';
};

export type GetAdminPromptsExplanationTypesErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminPromptsExplanationTypesError = GetAdminPromptsExplanationTypesErrors[keyof GetAdminPromptsExplanationTypesErrors];

export type GetAdminPromptsExplanationTypesResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminPromptsSystemByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/system/{id}';
};

export type DeleteAdminPromptsSystemByIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminPromptsSystemByIdError = DeleteAdminPromptsSystemByIdErrors[keyof DeleteAdminPromptsSystemByIdErrors];

export type DeleteAdminPromptsSystemByIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PutAdminPromptsSystemByIdData = {
    body: {
        prompt: string;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/system/{id}';
};

export type PutAdminPromptsSystemByIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutAdminPromptsSystemByIdError = PutAdminPromptsSystemByIdErrors[keyof PutAdminPromptsSystemByIdErrors];

export type PutAdminPromptsSystemByIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type DeleteAdminPromptsUserByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/user/{id}';
};

export type DeleteAdminPromptsUserByIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type DeleteAdminPromptsUserByIdError = DeleteAdminPromptsUserByIdErrors[keyof DeleteAdminPromptsUserByIdErrors];

export type DeleteAdminPromptsUserByIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PutAdminPromptsUserByIdData = {
    body: {
        prompt_template: string;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/user/{id}';
};

export type PutAdminPromptsUserByIdErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutAdminPromptsUserByIdError = PutAdminPromptsUserByIdErrors[keyof PutAdminPromptsUserByIdErrors];

export type PutAdminPromptsUserByIdResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PutAdminPromptsSystemByIdStatusData = {
    body: {
        status: 'active' | 'inactive';
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/system/{id}/status';
};

export type PutAdminPromptsSystemByIdStatusErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutAdminPromptsSystemByIdStatusError = PutAdminPromptsSystemByIdStatusErrors[keyof PutAdminPromptsSystemByIdStatusErrors];

export type PutAdminPromptsSystemByIdStatusResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PutAdminPromptsUserByIdStatusData = {
    body: {
        status: 'active' | 'inactive';
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/prompts/user/{id}/status';
};

export type PutAdminPromptsUserByIdStatusErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PutAdminPromptsUserByIdStatusError = PutAdminPromptsUserByIdStatusErrors[keyof PutAdminPromptsUserByIdStatusErrors];

export type PutAdminPromptsUserByIdStatusResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminPromptsRestoreDefaultsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/prompts/restore-defaults';
};

export type PostAdminPromptsRestoreDefaultsErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminPromptsRestoreDefaultsError = PostAdminPromptsRestoreDefaultsErrors[keyof PostAdminPromptsRestoreDefaultsErrors];

export type PostAdminPromptsRestoreDefaultsResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type PostAdminPromptsPlaygroundData = {
    body: {
        system_prompt: string;
        user_prompt: string;
        book_name: string;
        chapter_number: number;
        bible_version: string;
        model: string;
        effort: 'low' | 'medium' | 'high';
        send_chapter_context: boolean;
    };
    path?: never;
    query?: never;
    url: '/admin/prompts/playground';
};

export type PostAdminPromptsPlaygroundErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminPromptsPlaygroundError = PostAdminPromptsPlaygroundErrors[keyof PostAdminPromptsPlaygroundErrors];

export type PostAdminPromptsPlaygroundResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminPromptsExplanationExistingData = {
    body?: never;
    path?: never;
    query: {
        book_name: string;
        chapter_number: string;
        bible_version: string;
        explanation_type: string;
    };
    url: '/admin/prompts/explanation/existing';
};

export type GetAdminPromptsExplanationExistingErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminPromptsExplanationExistingError = GetAdminPromptsExplanationExistingErrors[keyof GetAdminPromptsExplanationExistingErrors];

export type GetAdminPromptsExplanationExistingResponses = {
    /**
     * Response for status 200
     */
    200: unknown;
};

export type GetAdminTopicsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/topics/';
};

export type PostAdminTopicsData = {
    body: {
        name: string;
        description?: string;
        category: string;
        sort_order?: number;
        is_active?: boolean;
    };
    path?: never;
    query?: never;
    url: '/admin/topics/';
};

export type DeleteAdminTopicsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/topics/{id}';
};

export type PutAdminTopicsByIdData = {
    body: {
        name?: string;
        description?: string;
        category?: string;
        sort_order?: number;
        is_active?: boolean;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/admin/topics/{id}';
};

export type PostAdminTopicsSortChronologicallyData = {
    body: {
        category: string;
    };
    path?: never;
    query?: never;
    url: '/admin/topics/sort-chronologically';
};

export type GetAdminCommentaryGradesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/admin/commentary/grades';
};

export type GetAdminCommentaryGradesErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type GetAdminCommentaryGradesError = GetAdminCommentaryGradesErrors[keyof GetAdminCommentaryGradesErrors];

export type GetAdminCommentaryGradesResponses = {
    /**
     * Response for status 200
     */
    200: {
        message: string;
        grades: unknown[];
        stats: {
            total: number;
            averageGrade: number;
            gradingCriteria: unknown[];
        };
    };
};

export type GetAdminCommentaryGradesResponse = GetAdminCommentaryGradesResponses[keyof GetAdminCommentaryGradesResponses];

export type PostAdminCommentaryGradeData = {
    body: {
        explanationId: string;
        criteria: string[];
    };
    path?: never;
    query?: never;
    url: '/admin/commentary/grade';
};

export type PostAdminCommentaryGradeErrors = {
    /**
     * Response for status 400
     */
    400: {
        message: string;
        data: unknown;
    };
    /**
     * Response for status 500
     */
    500: {
        message: string;
        data: unknown;
    };
};

export type PostAdminCommentaryGradeError = PostAdminCommentaryGradeErrors[keyof PostAdminCommentaryGradeErrors];

export type PostAdminCommentaryGradeResponses = {
    /**
     * Response for status 200
     */
    200: {
        success: boolean;
        grade: number;
        message: string;
    };
};

export type PostAdminCommentaryGradeResponse = PostAdminCommentaryGradeResponses[keyof PostAdminCommentaryGradeResponses];
