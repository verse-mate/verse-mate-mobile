---
appId: com.versemate.mobile
name: AI Explanation Feature
description: Tests the AI-powered verse explanation feature
tags:
  - ai
  - explanation
  - critical

---

# AI Explanation Feature E2E Test
#
# This flow tests the core AI feature: Getting AI-generated explanations for verses
#
# User Journey:
# 1. Launch app and navigate to a verse
# 2. Request AI explanation
# 3. Wait for AI response
# 4. Read explanation
# 5. (Optional) Translate explanation to another language

- launchApp:
    appId: com.versemate.mobile
    clearState: true

# Wait for app to load
- assertVisible: "VerseMate"

# Navigate to a specific verse (using daily verse)
- tapOn:
    id: "daily-verse-card"

# Wait for verse details screen
- assertVisible: "Verse Details"

# Scroll down to find "Get AI Explanation" button
- scrollUntilVisible:
    element:
      id: "ai-explanation-button"
    direction: DOWN

# Tap on "Get AI Explanation" button
- tapOn:
    id: "ai-explanation-button"

# Verify loading state appears
- assertVisible:
    text: "Generating explanation..."

# Wait for AI response
- assertVisible:
    id: "ai-explanation-content"

# Verify explanation contains text
- assertVisible:
    id: "ai-explanation-content"

# Verify explanation is at least 50 characters (meaningful content)
- runScript:
    env:
      EXPLANATION_ID: ai-explanation-content
    script: |
      output=$(maestro hierarchy | grep -A 2 "ai-explanation-content" | grep "text" | wc -c)
      if [ $output -lt 50 ]; then
        exit 1
      fi

# Test translation feature (optional)
# Scroll to translation dropdown
- scrollUntilVisible:
    element:
      id: "translation-language-select"
    direction: DOWN
    optional: true

# If translation dropdown exists, test translation
- tapOn:
    id: "translation-language-select"
    optional: true

# Select Spanish translation
- tapOn:
    text: "Espa√±ol"
    optional: true

# Verify translation loading state
- assertVisible:
    text: "Translating..."
    optional: true

# Verify translated explanation appears
- assertVisible:
    id: "ai-explanation-translated"
    optional: true

# Verify accessibility for explanation
- assertVisible:
    id: "ai-explanation-content"

# Go back to verify explanation persists
- swipe:
    direction: DOWN
    duration: 500

# Scroll back up to verify explanation is still visible
- scrollUntilVisible:
    element:
      id: "ai-explanation-content"
    direction: UP

- assertVisible:
    id: "ai-explanation-content"

# Test sharing explanation (if share button exists)
- tapOn:
    id: "share-explanation-button"
    optional: true

# Close share sheet if opened
- tapOn:
    text: "Cancel"
    optional: true

# Return to home
- back

# Verify returned to verse details
- assertVisible: "Verse Details"
