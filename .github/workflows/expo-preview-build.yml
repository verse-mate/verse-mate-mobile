name: Expo Preview Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        type: choice
        options:
          - all
          - ios
          - android
        default: 'all'

jobs:
  preview-build:
    name: EAS Preview Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type checking
        run: bun tsc --noEmit

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: npm test

      - name: Build iOS Preview
        id: ios_build
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios' }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        run: |
          # Capture build output and extract build ID
          eas build --platform ios --profile preview --non-interactive --no-wait --json > build_output.json
          BUILD_ID=$(cat build_output.json | jq -r '.id')
          echo "iOS Build ID: $BUILD_ID"
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT

      - name: Build Android Preview
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas build --platform android --profile preview --non-interactive --no-wait

      - name: Submit to TestFlight
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios' }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ASC_APP_ID: ${{ secrets.ASC_APP_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          BUILD_ID="${{ steps.ios_build.outputs.build_id }}"

          if [ -z "$BUILD_ID" ]; then
            echo "Error: Build ID not found from previous step"
            exit 1
          fi

          echo "Tracking iOS build: $BUILD_ID"
          echo "Waiting for build to complete before submitting to TestFlight..."

          # Wait for build to finish (max 45 minutes)
          for i in {1..90}; do
            sleep 30
            eas build:view $BUILD_ID --json > build_status.json
            STATUS=$(cat build_status.json | jq -r '.status')
            echo "Build status: $STATUS (check $i/90)"

            if [ "$STATUS" = "FINISHED" ] || [ "$STATUS" = "finished" ]; then
              echo "Build completed successfully!"
              eas submit --platform ios --id $BUILD_ID --non-interactive
              exit 0
            elif [ "$STATUS" = "ERRORED" ] || [ "$STATUS" = "errored" ] || [ "$STATUS" = "CANCELED" ] || [ "$STATUS" = "canceled" ]; then
              echo "Build failed with status: $STATUS"
              exit 1
            fi
          done

          echo "Build timeout after 45 minutes - please check EAS dashboard"
          exit 1

      - name: Android Build Info
        if: ${{ github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' }}
        run: |
          echo "Android preview build triggered!"
          echo "Note: Android builds will be available for download from EAS dashboard"
          echo "Play Store publication is not configured (account inactive)"
          echo "Visit: https://expo.dev/accounts/versemate/projects/verse-mate-mobile/builds"
