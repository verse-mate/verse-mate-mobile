name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: TypeScript type checking
        run: bun tsc --noEmit

      - name: Biome.js formatting and core linting
        run: bun biome ci

      - name: ESLint React Native rules check
        run: bun eslint .

      - name: Run tests
        run: npm test

  lint-staged-test:
    name: Test Lint-staged
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Test lint-staged on changed files
        run: |
          # Get list of changed files
          git diff --name-only --diff-filter=ACMRT origin/main...HEAD -- '*.js' '*.jsx' '*.ts' '*.tsx' | head -10 > changed_files.txt

          # If there are changed files, test lint-staged
          if [ -s changed_files.txt ]; then
            echo "Testing lint-staged on changed files:"
            cat changed_files.txt
            # Stage the changed files and run lint-staged
            git add $(cat changed_files.txt)
            bun lint-staged
          else
            echo "No relevant files changed, skipping lint-staged test"
          fi